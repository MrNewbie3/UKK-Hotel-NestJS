// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  password     String
  role         UserRole
  nomerHp      String
  jenisKelamin String
  alamat       String

  dudi   Dudi? @relation(fields: [dudiId], references: [id])
  dudiId Int?

  siswa Siswa?

  Casual   Casual? @relation(fields: [casualId], references: [id])
  casualId Int?

  ratings       Rating[]
  notifications Notification[]
}

enum UserRole {
  ADMIN_DUDI
  SISWA
  SUPERADMIN
}

model Dudi {
  id                  Int    @id @default(autoincrement())
  namaDudi            String
  fromPt              String
  alamatDudi          String
  noTelp              String
  fotoIndustri        String
  profilSingkat       String
  mediaSosial         String
  namaPenanggungJawab String
  bidang              String

  casuals Casual[]
  User    User[]
}

// Define the Siswa model
model Siswa {
  id                 Int    @id @default(autoincrement())
  kelas              String
  jurusan            String
  tempatTanggalLahir String
  nisn               String
  status             String

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  competences SiswaCompetence[]
  portfolios  PortfolioSiswa[]
}

model SiswaCompetence {
  id              Int      @id @default(autoincrement())
  namaSertifikat  String
  jenisSertifikat String
  penyelenggara   String
  image           String
  tanggalTerbit   DateTime

  siswa   Siswa @relation(fields: [siswaId], references: [id])
  siswaId Int
}

model PortfolioSiswa {
  id            Int    @id @default(autoincrement())
  namaPortfolio String
  deskripsi     String
  linkPortfolio String

  // Define a relation to the Siswa model
  siswa   Siswa @relation(fields: [siswaId], references: [id])
  siswaId Int
}

model Casual {
  id               Int      @id @default(autoincrement())
  namaCasual       String
  kategoriCasual   String
  startCasual      DateTime
  endCasual        DateTime
  lokasi           String
  waktuPelaksanaan DateTime
  statusCasual     String

  users   User[]
  ratings Rating[]
  Dudi    Dudi?    @relation(fields: [dudiId], references: [id])
  dudiId  Int?
}

model Rating {
  id     Int @id @default(autoincrement())
  rating Int

  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  casual   Casual @relation(fields: [casualId], references: [id])
  casualId Int
}

model Notification {
  id          Int      @id @default(autoincrement())
  status      String
  description String
  createdAt   DateTime

  user   User @relation(fields: [userId], references: [id])
  userId Int
}
